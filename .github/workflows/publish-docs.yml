name: Publish Docs

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The tag to publish'
        required: true
        type: string

  workflow_call:
    inputs:
      version:
        description: 'The tag to publish'
        required: true
        type: string
    secrets:
      GCP_SA_KEY:
        description: 'The GCP service account key'
        required: true

jobs:
  prepare-docs:
    if: github.repository == 'urbanairship/android-library'
    runs-on: ubuntu-latest
    steps:
      # Download pre-packaged docs artifacts if they were published by the release workflow.
      - name: Download pre-packaged docs artifacts
        id: download_docs
        env:
          VERSION: ${{ inputs.version }}
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: packaged-docs-$VERSION
          path: build/docs

      # Fallback to building if artifacts were not previously uploaded for the given version.
      # NOTE: All the steps below this point will be skipped if the download step succeeds.
      - name: Checkout repo to build docs
        if: ${{ steps.download_docs.outcome == 'failure' }}
        env:
          VERSION: ${{ inputs.version }}
        uses: actions/checkout@v4
        with:
          ref: refs/tags/$VERSION

      - name: Setup Java Version
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Copy CI gradle.properties
        if: ${{ steps.download_docs.outcome == 'failure' }}
        env:
          VERSION: ${{ inputs.version }}
        run: |
          set -euo pipefail
          mkdir -p ~/.gradle
          cp .github/ci-gradle.properties ~/.gradle/gradle.properties

      - name: Verify Version (Gradle equality)
        if: ${{ steps.download_docs.outcome == 'failure' }}
        env:
          VERSION: ${{ inputs.version }}
        run: |
          set -euo pipefail
          ACTUAL_VERSION=$(./gradlew -q getVersion)

          if [[ "$ACTUAL_VERSION" != "$VERSION" ]]; then
            echo "Gradle version mismatch: expected '$VERSION', got '$ACTUAL_VERSION'" >&2
            exit 1
          fi

          echo "Verified version matches Gradle: $VERSION"

      - name: Build docs packages
        if: ${{ steps.download_docs.outcome == 'failure' }}
        env:
          VERSION: ${{ inputs.version }}
        run: |
          set -euo pipefail
          ./gradlew packageDocs --stacktrace

      - name: Upload packaged docs artifacts
        if: ${{ steps.download_docs.outcome == 'failure' }}
        env:
          VERSION: ${{ inputs.version }}
        uses: actions/upload-artifact@v4
        with:
          name: packaged-docs-$VERSION
          retention-days: 1
          path: |
            build/docs/$VERSION-kdoc.tar.gz

  upload-docs:
    if: github.repository == 'urbanairship/android-library'
    runs-on: ubuntu-latest
    needs: prepare-docs
    steps:
      # Docs should already be built and uploaded at this point, but we still need
      # this step in order for google-github-actions/auth to work in upload step.
      - name: Checkout repo
        env:
          VERSION: ${{ inputs.version }}
        uses: actions/checkout@v4
        with:
          ref: refs/tags/$VERSION

      - name: Download packaged docs artifacts
        id: download_docs
        env:
          VERSION: ${{ inputs.version }}
        uses: actions/download-artifact@v4
        with:
          name: packaged-docs-$VERSION
          path: build/docs

      - name: Setup GCP Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Upload docs
        env:
            VERSION: ${{ inputs.version }}
        run: |
          set -euo pipefail
          gsutil cp "build/docs/${VERSION}-kdoc.tar.gz" \
            "gs://ua-web-ci-prod-docs-transfer/libraries/android-kotlin/${VERSION}.tar.gz"