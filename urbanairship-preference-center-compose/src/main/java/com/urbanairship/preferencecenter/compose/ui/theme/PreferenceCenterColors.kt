package com.urbanairship.preferencecenter.compose.ui.theme

import androidx.compose.runtime.Immutable
import androidx.compose.ui.graphics.Color
import com.urbanairship.preferencecenter.PreferenceCenter

@Immutable
public data class PreferenceCenterColors(
    val background: Color,
    val surface: Color,
    val accent: Color,
    val divider: Color,
    val link: Color,
    val error: Color,
    val titleText: Color,
    val itemTitleText: Color,
    val itemDescriptionText: Color,
    val sectionItemTitleText: Color,
    val sectionLabelBackground: Color,
    val sectionLabelText: Color,
    val subscriptionTypeChipSurface: Color,
    val subscriptionTypeChipChecked: Color,
    val subscriptionTypeChipUnchecked: Color,
    val subscriptionTypeChipStroke: Color,
    val subscriptionTypeChipCheckMark: Color,
    val subscriptionTypeChipLabelText: Color,
    val subscriptionSwitchCheckedThumbColor: Color,
    val subscriptionSwitchCheckedTrackColor: Color,
    val subscriptionSwitchUncheckedThumbColor: Color,
    val subscriptionSwitchUncheckedTrackColor: Color,
    val contactManagementItemTitleText: Color,
    val contactManagementItemDescriptionText: Color,
    val contactManagementItemIconTint: Color,
    val contactManagementItemDeleteIconTint: Color,
    val contactManagementItemActionText: Color,
    val contactManagementItemAddressText: Color,
    val contactManagementItemStatusText: Color,
    val contactManagementAddButtonText: Color,
    val contactManagementDialogBackground: Color,
    val contactManagementDialogTitleText: Color,
    val contactManagementDialogDescriptionText: Color,
    val contactManagementDialogInputLabelFocused: Color,
    val contactManagementDialogInputLabelUnfocused: Color,
    val contactManagementDialogInputBorderFocused: Color,
    val contactManagementDialogInputBorderUnfocused: Color,
    val contactManagementDialogButtonLabelPositive: Color,
    val contactManagementDialogButtonLabelNeutral: Color,
    val contactManagementDialogButtonLabelDisabled: Color,
    val alertButtonBackground: Color,
    val alertButtonText: Color,
    val alertTitleText: Color,
    val alertDescriptionText: Color,
    val alertIconTint: Color,
    val topBarBackground: Color,
    val topBarTitleText: Color,
    val topBarIconTint: Color,
    val loadingIndicator: Color,
) {

    public companion object {

        public fun lightDefaults(
            background: Color = Color(0xFFF3F3F3),
            surface: Color = Color.White,
            accent: Color = Color(0xFF004BFF),
            textPrimary: Color = Color.Black,
            textSecondary: Color = Color(0xFF616161),
            textInverse: Color = Color.White,
            divider: Color = Color(0xFF8D8C8D),
            link: Color = Color(0xFF1C5AFA),
            error: Color = Color(0xFFB00020)
        ): PreferenceCenterColors = PreferenceCenterColors(
            background = background,
            surface = surface,
            accent = accent,
            divider = divider,
            link = link,
            error = error,
            titleText = textPrimary,
            itemTitleText = textPrimary,
            itemDescriptionText = textSecondary,
            sectionItemTitleText = accent,
            sectionLabelBackground = textSecondary,
            sectionLabelText = textInverse,
            subscriptionTypeChipSurface = background,
            subscriptionTypeChipChecked = accent,
            subscriptionTypeChipUnchecked = surface,
            subscriptionTypeChipStroke = divider,
            subscriptionTypeChipCheckMark = textInverse,
            subscriptionTypeChipLabelText = textPrimary,
            subscriptionSwitchCheckedThumbColor = accent,
            subscriptionSwitchCheckedTrackColor = accent.copy(alpha = 0.5f),
            subscriptionSwitchUncheckedThumbColor = textSecondary,
            subscriptionSwitchUncheckedTrackColor = textSecondary.copy(alpha = 0.3f),
            contactManagementItemTitleText = textPrimary,
            contactManagementItemDescriptionText = textSecondary,
            contactManagementItemIconTint = textSecondary,
            contactManagementItemDeleteIconTint = textSecondary,
            contactManagementItemActionText = accent,
            contactManagementItemAddressText = textSecondary,
            contactManagementItemStatusText = textSecondary,
            contactManagementAddButtonText = textPrimary,
            contactManagementDialogBackground = surface,
            contactManagementDialogTitleText = textPrimary,
            contactManagementDialogDescriptionText = textSecondary,
            contactManagementDialogInputLabelFocused = textPrimary,
            contactManagementDialogInputLabelUnfocused = textSecondary,
            contactManagementDialogInputBorderFocused = divider,
            contactManagementDialogInputBorderUnfocused = divider,
            contactManagementDialogButtonLabelPositive = accent,
            contactManagementDialogButtonLabelNeutral = textPrimary,
            contactManagementDialogButtonLabelDisabled = textSecondary,
            alertButtonBackground = accent,
            alertButtonText = textInverse,
            alertTitleText = textPrimary,
            alertDescriptionText = textPrimary,
            alertIconTint = divider,
            topBarBackground = surface,
            topBarTitleText = textPrimary,
            topBarIconTint = textPrimary,
            loadingIndicator = accent
        )

        public fun darkDefaults(
            background: Color = Color.Black,
            surface: Color = Color(0xFF121212),
            accent: Color = Color(0xFF1C5AFA),
            textPrimary: Color = Color.White,
            textSecondary: Color = Color(0xFFBDBDBD),
            textInverse: Color = Color.Black,
            divider: Color = Color(0xFF616161),
            link: Color = Color(0xFF1C5AFA),
            error: Color = Color(0xFFB00020)
        ): PreferenceCenterColors = PreferenceCenterColors(
            background = background,
            surface = surface,
            accent = accent,
            divider = divider,
            link = link,
            error = error,
            titleText = textPrimary,
            itemTitleText = textPrimary,
            itemDescriptionText = textSecondary,
            sectionItemTitleText = accent,
            sectionLabelBackground = textSecondary,
            sectionLabelText = textInverse,
            subscriptionTypeChipSurface = background,
            subscriptionTypeChipChecked = accent,
            subscriptionTypeChipUnchecked = surface,
            subscriptionTypeChipStroke = divider,
            subscriptionTypeChipCheckMark = textPrimary,
            subscriptionTypeChipLabelText = textPrimary,
            subscriptionSwitchCheckedThumbColor = accent,
            subscriptionSwitchCheckedTrackColor = accent.copy(alpha = 0.5f),
            subscriptionSwitchUncheckedThumbColor = textSecondary,
            subscriptionSwitchUncheckedTrackColor = textSecondary.copy(alpha = 0.3f),
            contactManagementItemTitleText = textPrimary,
            contactManagementItemDescriptionText = textSecondary,
            contactManagementItemIconTint = textSecondary,
            contactManagementItemDeleteIconTint = textSecondary,
            contactManagementItemActionText = accent,
            contactManagementItemAddressText = textSecondary,
            contactManagementItemStatusText = textSecondary,
            contactManagementAddButtonText = textPrimary,
            contactManagementDialogBackground = surface,
            contactManagementDialogTitleText = textPrimary,
            contactManagementDialogDescriptionText = textSecondary,
            contactManagementDialogInputLabelFocused = textPrimary,
            contactManagementDialogInputLabelUnfocused = textSecondary,
            contactManagementDialogInputBorderFocused = divider,
            contactManagementDialogInputBorderUnfocused = divider,
            contactManagementDialogButtonLabelPositive = accent,
            contactManagementDialogButtonLabelNeutral = textPrimary,
            contactManagementDialogButtonLabelDisabled = textSecondary,
            alertButtonBackground = accent,
            alertButtonText = textInverse,
            alertTitleText = textPrimary,
            alertDescriptionText = textPrimary,
            alertIconTint = divider,
            topBarBackground = background,
            topBarTitleText = textPrimary,
            topBarIconTint = textPrimary,
            loadingIndicator = accent
        )
    }
}
