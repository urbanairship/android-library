import org.jetbrains.kotlin.gradle.dsl.JvmTarget

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    alias(libs.plugins.kotlinx.serialization)
    alias(libs.plugins.compose.compiler)
}

android {
    namespace 'com.urbanairship.devapp'

    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.urbanairship.sample"
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding = true
        buildConfig = true
        compose = true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }


    lint {
        abortOnError false
        disable 'MissingTranslation', 'AppCompatResource'
    }
}

kotlin {
    compilerOptions {
        jvmTarget = JvmTarget.JVM_17
    }
}


dependencies {
    // Kotlin
    implementation(libs.kotlinx.coroutines.android)
    implementation(libs.kotlinx.coroutines.core)
    implementation(libs.kotlinx.serialization.json)

    // Jetpack
    implementation(libs.androidx.appcompat)
    implementation(libs.androidx.activityktx)
    implementation(libs.compose.ui.viewbinding)
    implementation(libs.google.material)
    implementation(libs.androidx.preference)
    implementation(libs.androidx.lifecycle.viewmodel)
    implementation(libs.androidx.lifecycle.viewmodelktx)
    implementation(libs.androidx.constraintlayout)
    implementation(libs.androidx.constraintlayout.compose)
    implementation(libs.androidx.navigation.fragment)
    implementation(libs.androidx.navigation.ui)
    implementation(libs.androidx.fragment.compose)
    implementation(libs.androidx.navigation3.ui)
    implementation(libs.androidx.navigation3.runtime)
    implementation(libs.androidx.lifecycle.viewmodel.navigation3)
    implementation(libs.playservices.location)

    // Compose
    androidTestImplementation(platform(libs.compose.bom))
    implementation(libs.compose.material3)
    implementation(libs.androidx.lifecycle.viewmodel.compose)
    implementation libs.compose.materialicons.extended

    // Jetpack Glance
    implementation(libs.glance.appwidget)

    // Airship ADM
    implementation project(':urbanairship-adm')

    // Airship FCM
    implementation project(':urbanairship-fcm')

    // Airship Message Center
    implementation project(':urbanairship-message-center-compose')

    // Airship Preference Center
    implementation project(':urbanairship-preference-center')

    // Airship Automation (In-App)
    implementation project(":urbanairship-automation-compose")

    // Airship Live Updates
    implementation project(':urbanairship-live-update')

    // Airship Feature Flags
    implementation project(':urbanairship-feature-flag')

    // Airship Debug: Normally this is a debug only dependency but we embed the view in sample app
    implementation project(':urbanairship-debug')

    implementation libs.glide
    implementation libs.compose.ui.tooling.preview

    implementation libs.snakeyaml

    // Testing-only dependencies
    // Espresso
    androidTestImplementation(libs.androidx.test.espresso.core)
    androidTestImplementation(libs.androidx.test.espresso.contrib) {
        // https://github.com/android/android-test/issues/861
        exclude group: 'org.checkerframework', module: 'checker'
    }
    androidTestImplementation(libs.androidx.test.espresso.web)
    androidTestImplementation(libs.androidx.test.espresso.intents)
    androidTestImplementation(libs.androidx.test.espresso.idling.concurrent)

    // AndroidJUnitRunner and JUnit Rules
    debugImplementation(libs.androidx.test.core)
    androidTestImplementation(libs.androidx.test.core)
    androidTestImplementation(libs.androidx.test.runner)
    androidTestImplementation(libs.androidx.test.rules)
    androidTestImplementation(libs.androidx.test.ext.junit)

    // Assertions
    androidTestImplementation(libs.google.truth)
    androidTestImplementation(libs.androidx.test.ext.truth)

    // Robolectric / Mockito
    testImplementation(libs.robolectric.core)
    androidTestImplementation(libs.robolectric.annotations)
    androidTestImplementation(libs.mockito.core)
    androidTestImplementation(libs.mockito.android)

    androidTestImplementation(libs.androidx.navigation.testing)
    debugImplementation(libs.androidx.fragment.testing)
    debugImplementation(libs.compose.ui.tooling.preview)
}


def googleServicesFile = rootProject.file('devapp/google-services.json')
if (googleServicesFile.exists()) {
    apply plugin: 'com.google.gms.google-services'  // Google Play services Gradle plugin
}
