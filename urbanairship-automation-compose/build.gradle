plugins {
    id 'airship-module'
    id 'kotlin-android'
    alias(libs.plugins.compose.compiler)
}

description = "Airship Android Automation Compose UI."

android {
    namespace 'com.urbanairship.automation.compose'

    buildFeatures {
        compose true
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
        freeCompilerArgs = ["-Xexplicit-api=strict", "-Xjvm-default=all-compatibility"]
    }
}

dependencies {
    api project(':urbanairship-automation')
    api project(':urbanairship-layout')

    // Kotlin
    // We expose the kotlinx.coroutines API to the public API, so it needs to be an API dependency
    api(libs.kotlinx.coroutines.core)
    implementation(libs.kotlinx.coroutines.android)

    // Compose
    implementation(platform(libs.compose.bom))
    implementation(libs.compose.foundation)
    implementation(libs.compose.runtime)
    implementation(libs.compose.ui)
    implementation(libs.compose.animation)

    // Compose Preview Support
    implementation(libs.compose.ui.tooling.preview)
    debugImplementation(libs.compose.ui.tooling)

    // AndroidX
    implementation(libs.androidx.corektx)
    implementation(libs.androidx.activity.compose)
    implementation(libs.androidx.lifecycle.runtime.compose)

    // Instrumentation Tests
    androidTestImplementation(platform(libs.compose.bom))
    androidTestImplementation(libs.androidx.test.ext.junit)
    androidTestImplementation(libs.androidx.test.espresso.core)
    androidTestImplementation(libs.compose.ui.test.junit4)
    debugImplementation(libs.compose.ui.test.manifest)

    // Unit Tests
    testImplementation(libs.androidx.test.ext.junit)
    testImplementation(libs.androidx.test.core)
    testImplementation(libs.androidx.test.runner)
    testImplementation(libs.androidx.test.rules)
    testImplementation(libs.robolectric.core)
    testImplementation(libs.mockk)
    testImplementation(libs.kotlinx.coroutines.test)
    testImplementation(libs.turbine)
}
